% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/is_python_package_with_version_installed.R
\name{is_python_package_with_version_installed}
\alias{is_python_package_with_version_installed}
\title{Determine if a Python package with the right version is installed}
\usage{
is_python_package_with_version_installed(
  package_name,
  package_version,
  ormr_folder_name = get_default_ormr_folder_name(),
  python_version = get_default_python_version(),
  verbose = FALSE
)
}
\arguments{
\item{package_name}{the name of one Python package}

\item{package_version}{a Python package's version, e.g.
\verb{==3.1}, or \verb{<=2.7.1} or \verb{>=42}}

\item{ormr_folder_name}{name of the folder where \code{ormr}
installs all Python environments and packages}

\item{python_version}{the version of Python used.
Use \link{get_default_python_version} to get
the default Python version.}

\item{verbose}{the verbosity of a function.
Set to \link{TRUE} for more output.
Use \link[plinkr]{check_verbose} to detect if this argument is valid.}
}
\value{
nothing
}
\description{
Determine if a Python package with the right version is installed
}
\examples{
ormr_folder_name <- create_default_conda_env()

# Check for an exact version
is_python_package_with_version_installed(
  ormr_folder_name = ormr_folder_name,
  package_name = "pip",
  package_version = "21.3.1"
)
is_python_package_with_version_installed(
  ormr_folder_name = ormr_folder_name,
  package_name = "pip",
  package_version = "==21.3.1"
)

# Check for a range
is_python_package_with_version_installed(
  ormr_folder_name = ormr_folder_name,
  package_name = "pip",
  package_version = "<=21.3.1"
)
is_python_package_with_version_installed(
  ormr_folder_name = ormr_folder_name,
  package_name = "pip",
  package_version = ">=21.3.1"
)
}
\author{
Rich√®l J.C. Bilderbeek
}
